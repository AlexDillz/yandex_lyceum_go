// Гоша работает над проектом, в котором приходится часто решать квадратные уравнения.
// Он мог бы и сам написать функцию для их вычисления, но сильно занят (спит без задних ног).
// Помогите Гоше: напишите калькулятор для вычисления корней квадратного уравнения с пользовательским вводом.

// Для этого напишите функцию SqRoots(), в которой с клавиатуры через пробел вводятся три вещественных числа,
// при этом первое число гарантированно не равно нулю. Функция должна вывести на экран через пробел
// по возрастанию корни уравнения (один или два), или два числа 0, если корней нет.

// Функция ничего не должна возвращать.

// Самостоятельно определять функцию main() и вызывать функцию SqRoots()
// не требуется – это сделает проверяющая система.

// То есть вы можете сначала написать в среде разработки работающую
// программу, затем скопировать код, удалить функцию main()
// и отправить решение на проверку.

// В следующих задачах формат ответа аналогичный.

package main

import (
	"fmt"
	"math"
)

func SqRoots() {
	var a, b, c float64
	fmt.Scanln(&a, &b, &c)

	discr := math.Pow(b, 2) - 4.0*a*c

	if discr < 0 {
		fmt.Println("0.000 0.000")
	} else if discr == 0 {
		root := -b / (2 * a)
		fmt.Printf(" %.3f\n", root)
	} else {
		root1 := (-b + math.Sqrt(discr)) / (2 * a)
		root2 := (-b - math.Sqrt(discr)) / (2 * a)
		if root1 < root2 {
			fmt.Printf("%.3f %.3f\n", root1, root2)
		} else {
			fmt.Printf("%.3f %.3f\n", root2, root1)
		}
	}
}

func main() {
	SqRoots()
}
